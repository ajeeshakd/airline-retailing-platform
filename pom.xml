<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.arc.arp</groupId>
  <artifactId>airline-retailing-platform-parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Airline Retailing Platform Parent</name>
  <description>Parent POM for all ARP</description>

  <properties>
    <java.version>21</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <checkstyle.version>3.2.0</checkstyle.version>
    <pmd.version>3.26.0</pmd.version>
    <spotbugs.version>4.8.3.0</spotbugs.version>
    <maven-checkstyle-plugin.version>3.6.0</maven-checkstyle-plugin.version>
    <checkstyle.version>10.21.2</checkstyle.version>
    <nohttp-checkstyle.version>0.0.11</nohttp-checkstyle.version>
    <jacoco-maven-plugin.version>0.8.12</jacoco-maven-plugin.version>
    <spotless-maven-plugin.version>2.44.2</spotless-maven-plugin.version>
    <dependency-check-maven.version>12.1.0</dependency-check-maven.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
  </properties>

  <modules>
        <module>common-libs-bom</module>
        <module>airline-retailing-platform-service-bom</module>
        <module>common-libs/types-clearance</module>
        <module>airline-retailing-platform-service/ingest-clearance-request</module>
    </modules>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>

    <!-- TODO: These plugins will runn only when the build is initiated at the parent pom level 
          and so need to find a clean way to have it once and use it everywhere -->
    <plugins>

        <!-- Checkstyle Plugin (Code Formatting & Naming Conventions) -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${maven-checkstyle-plugin.version}</version>
          <dependencies>
              <dependency>
                  <groupId>com.puppycrawl.tools</groupId>
                  <artifactId>checkstyle</artifactId>
                  <version>${checkstyle.version}</version>
              </dependency>
              <dependency>
                  <groupId>io.spring.nohttp</groupId>
                  <artifactId>nohttp-checkstyle</artifactId>
                  <version>${nohttp-checkstyle.version}</version>
              </dependency>
          </dependencies>
          <configuration>
              <configLocation>${session.executionRootDirectory}/build-config/google_checkstyle.xml</configLocation>
              <includes>pom.xml,README.md</includes>
              <excludes>.git/**/*,target/**/*,node_modules/**/*</excludes>
              <sourceDirectories>./</sourceDirectories>
          </configuration>
          <executions>
              <execution>
                  <goals>
                      <goal>check</goal>
                  </goals>
              </execution>
          </executions>
        </plugin>

        <!-- PMD Plugin (Static Code Analysis) -->
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>${pmd.version}</version>
            <executions>
                <execution>
                    <phase>validate</phase>
                    <goals>
                        <goal>check</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <rulesets>
                    <ruleset>${session.executionRootDirectory}/build-config/pmd-rules.xml</ruleset>
                </rulesets>
                <failOnViolation>true</failOnViolation>
            </configuration>
        </plugin>

        <!-- SpotBugs Plugin (Finds Potential Bugs) -->
        <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
            <version>${spotbugs.version}</version>
            <executions>
                <execution>
                    <phase>verify</phase>
                    <goals>
                        <goal>check</goal>
                    </goals>
                </execution>
            </executions>
            <configuration>
                <plugins>
                <!-- Static Application Security Testing (SAST) -->
                  <plugin>
                      <groupId>com.h3xstream.findsecbugs</groupId>
                      <artifactId>findsecbugs-plugin</artifactId>
                      <version>1.12.0</version>
                  </plugin>
                </plugins>
            </configuration>
        </plugin>

        <!-- Jacoco Plugin (Code Coverage) -->
        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <executions>
              <execution>
                  <id>pre-unit-tests</id>
                  <goals>
                      <goal>prepare-agent</goal>
                  </goals>
              </execution>
              <execution>
                  <!-- Ensures that the code coverage report for unit tests is created after unit tests have been run -->
                  <id>post-unit-test</id>
                  <phase>test</phase>
                  <goals>
                      <goal>report</goal>
                  </goals>
              </execution>
              <execution>
                  <id>pre-integration-tests</id>
                  <goals>
                      <goal>prepare-agent</goal>
                  </goals>
              </execution>
              <execution>
                  <!-- Ensures that the code coverage report for integration tests is created after integration tests have been run -->
                  <id>post-integration-tests</id>
                  <phase>post-integration-test</phase>
                  <goals>
                      <goal>report-integration</goal>
                  </goals>
              </execution>
              <execution>
                  <id>check-coverage</id>
                  <phase>verify</phase>
                  <goals>
                      <goal>check</goal>
                  </goals>
                  <configuration>
                    <rules>
                      <rule>
                        <element>BUNDLE</element>
                        <limits>
                          <limit>
                            <counter>LINE</counter>
                            <value>COVEREDRATIO</value>
                            <!-- TODO: Temp relief to skip build failures, need to achieve 90+% -->
                            <minimum>.95</minimum> <!-- 90% Coverage Required -->
                          </limit>
                        </limits>
                      </rule>
                    </rules>
                  </configuration>
              </execution>
          </executions>
      </plugin>

      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${spotless-maven-plugin.version}</version>
        <executions>
            <execution>
                <id>spotless</id>
                <phase>process-sources</phase>
                <goals>
                    <goal>apply</goal>
                </goals>
            </execution>
            <execution>
              <id>validate-formatting</id>
              <phase>verify</phase>  <!-- Ensures spotless runs in every build -->
              <goals>
                  <goal>check</goal>  <!-- Fails build if formatting is incorrect -->
              </goals>
            </execution>
        </executions>
        <configuration>
          <java>
              <googleJavaFormat>
                  <version>1.24.0</version>  <!-- Uses Google Java Format -->
              </googleJavaFormat>
          </java>
        </configuration>
      </plugin>

      <!-- OWASP Dependency Check (Dependency Scanning) -->
      <!-- TODO: This is not part of the build and needs to be run separately -->
      <!-- ./mvnw dependency-check:check -->
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${dependency-check-maven.version}</version>
        <configuration>
          <failBuildOnCVSS>7.0</failBuildOnCVSS>
          <format>ALL</format>
          <outputDirectory>${project.build.directory}/dependency-check-report</outputDirectory>
        </configuration>
      </plugin>
        
    </plugins>
  </build>

</project>